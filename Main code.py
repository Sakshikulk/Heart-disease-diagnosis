# -*- coding: utf-8 -*-
"""Copy of EL_project.ipnyb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jfLO6ZgD6x9Fyoj5cna5cXiqsQqp39-u
"""

# HEART DISESASE DIAGNOSTICS MACHINE LEARNING PROJECT

"""IMPORTING THE DEPENDENCIES"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""DATA COLLECTION AND PROCESSING"""

# LOADING THE CSV DATA TO A PANDAS DATAFRAME
heart_data=pd.read_csv('/content/drive/MyDrive/heart.csv')

# PRINT FIRST 5 ROWS OF THE DATA
heart_data.head()

"""# New Section"""

# PRINT last 5 ROWS OF THE DATA
heart_data.tail()

# TO CHEAK THE NUMBER OF ROWS AND COLOUMNS IN THE DATASET
heart_data.shape

# OTHER INFORMATION
heart_data.info()

heart_data.isnull().sum()

# STATISTICAL MEASURE OF THE DATA
heart_data.describe()

#  CHEAKING THE DISTRIBUTION OF TARGET VARIABLE
heart_data['target'].value_counts()

"""1 represents the presence of heart disease ;
0 repreasents the absence of heart disease

SPLITTING THE FEATURES AND THE TARGET
"""

x= heart_data.drop(columns='target',axis=1)
y=heart_data['target']

print(x)

print(y)

"""SPLITTING THE DATA INTO SPLTTING DATA AND TESTING DATA"""

x_train, x_test,y_train, y_test=train_test_split(x,y,test_size=0.25,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

"""MODEL TRAINING

LOGISTIC REGRESSION MODEL
"""

model=LogisticRegression()

# training the logistic regression model with training data
model.fit(x_train,y_train)

"""MODEL EVALUATION

ACCURACY SCORE
"""

# accuracy on the training data
x_train_prediction = model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction,y_train)

print('Accuracy on training data :',training_data_accuracy )

# accuracy on the test data
x_test_prediction = model.predict(x_test)
test_data_accuracy = accuracy_score(x_test_prediction,y_test)

print('Accuracy on test data :',test_data_accuracy )

"""BUILDING A PREDICTIVE SYSTEM"""

input_data=(37,1,2,130,250,0,1,187,0,3.5,0,0,2)

# converting the the input data into a numpy array
input_data_as_numpy_array=np.asarray(input_data)

# WE WILL RESHAPE THE NUMPY ARRAY AS WE ARE PRIDICTING FOR ONLY ON INSTANCE

input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]==0):
  print("the person does not have a heart disease")
else:
  print("the person has heart disease")

